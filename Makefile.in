# Makefile.in generated by automake 1.11.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = prodcon-bskfifo$(EXEEXT) prodcon-fc$(EXEEXT) \
	prodcon-lb$(EXEEXT) prodcon-kstack$(EXEEXT) \
	prodcon-ms$(EXEEXT) prodcon-dq-1random$(EXEEXT) \
	prodcon-dq-partrr$(EXEEXT) prodcon-rd$(EXEEXT) \
	prodcon-uskfifo$(EXEEXT) prodcon-wf-ppopp11$(EXEEXT) \
	prodcon-wf-ppopp12$(EXEEXT)
noinst_PROGRAMS = $(am__EXEEXT_1)
TESTS = atomic_value128_unittest$(EXEEXT) \
	atomic_value64_unittest$(EXEEXT)
subdir = .
DIST_COMMON = $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/configure AUTHORS depcomp install-sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
am__EXEEXT_1 = atomic_value128_unittest$(EXEEXT) \
	atomic_value64_unittest$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_atomic_value128_unittest_OBJECTS = src/test/atomic_value128_unittest-atomic_value128_unittest.$(OBJEXT) \
	src/util/atomic_value128_unittest-malloc.$(OBJEXT)
atomic_value128_unittest_OBJECTS =  \
	$(am_atomic_value128_unittest_OBJECTS)
atomic_value128_unittest_DEPENDENCIES = $(GTEST_LIBS)
am_atomic_value64_unittest_OBJECTS = src/test/atomic_value64_unittest-atomic_value64_unittest.$(OBJEXT) \
	src/util/atomic_value64_unittest-malloc.$(OBJEXT)
atomic_value64_unittest_OBJECTS =  \
	$(am_atomic_value64_unittest_OBJECTS)
atomic_value64_unittest_DEPENDENCIES = $(GTEST_LIBS)
am__objects_1 = src/benchmark/common.$(OBJEXT) \
	src/benchmark/prodcon/prodcon.$(OBJEXT) \
	src/util/malloc.$(OBJEXT) src/util/random.$(OBJEXT) \
	src/util/threadlocals.$(OBJEXT) src/util/workloads.$(OBJEXT)
am_prodcon_bskfifo_OBJECTS = $(am__objects_1) \
	src/benchmark/std_glue/glue_bskfifo.$(OBJEXT)
prodcon_bskfifo_OBJECTS = $(am_prodcon_bskfifo_OBJECTS)
prodcon_bskfifo_LDADD = $(LDADD)
prodcon_bskfifo_DEPENDENCIES =
am_prodcon_dq_1random_OBJECTS = $(am__objects_1) \
	src/benchmark/std_glue/glue_dq_1random.$(OBJEXT)
prodcon_dq_1random_OBJECTS = $(am_prodcon_dq_1random_OBJECTS)
prodcon_dq_1random_LDADD = $(LDADD)
prodcon_dq_1random_DEPENDENCIES =
am_prodcon_dq_partrr_OBJECTS = $(am__objects_1) \
	src/benchmark/std_glue/glue_dq_partrr.$(OBJEXT)
prodcon_dq_partrr_OBJECTS = $(am_prodcon_dq_partrr_OBJECTS)
prodcon_dq_partrr_LDADD = $(LDADD)
prodcon_dq_partrr_DEPENDENCIES =
am_prodcon_fc_OBJECTS = $(am__objects_1) \
	src/benchmark/std_glue/glue_fc_queue.$(OBJEXT)
prodcon_fc_OBJECTS = $(am_prodcon_fc_OBJECTS)
prodcon_fc_LDADD = $(LDADD)
prodcon_fc_DEPENDENCIES =
am_prodcon_kstack_OBJECTS = $(am__objects_1) \
	src/benchmark/std_glue/glue_kstack.$(OBJEXT)
prodcon_kstack_OBJECTS = $(am_prodcon_kstack_OBJECTS)
prodcon_kstack_LDADD = $(LDADD)
prodcon_kstack_DEPENDENCIES =
am_prodcon_lb_OBJECTS = $(am__objects_1) \
	src/benchmark/std_glue/glue_lb_queue.$(OBJEXT)
prodcon_lb_OBJECTS = $(am_prodcon_lb_OBJECTS)
prodcon_lb_LDADD = $(LDADD)
prodcon_lb_DEPENDENCIES =
am_prodcon_ms_OBJECTS = $(am__objects_1) \
	src/benchmark/std_glue/glue_ms_queue.$(OBJEXT)
prodcon_ms_OBJECTS = $(am_prodcon_ms_OBJECTS)
prodcon_ms_LDADD = $(LDADD)
prodcon_ms_DEPENDENCIES =
am_prodcon_rd_OBJECTS = $(am__objects_1) \
	src/benchmark/std_glue/glue_rd_queue.$(OBJEXT)
prodcon_rd_OBJECTS = $(am_prodcon_rd_OBJECTS)
prodcon_rd_LDADD = $(LDADD)
prodcon_rd_DEPENDENCIES =
am_prodcon_uskfifo_OBJECTS = $(am__objects_1) \
	src/benchmark/std_glue/glue_uskfifo.$(OBJEXT)
prodcon_uskfifo_OBJECTS = $(am_prodcon_uskfifo_OBJECTS)
prodcon_uskfifo_LDADD = $(LDADD)
prodcon_uskfifo_DEPENDENCIES =
am_prodcon_wf_ppopp11_OBJECTS = $(am__objects_1) \
	src/benchmark/std_glue/glue_wf_ppopp11.$(OBJEXT)
prodcon_wf_ppopp11_OBJECTS = $(am_prodcon_wf_ppopp11_OBJECTS)
prodcon_wf_ppopp11_LDADD = $(LDADD)
prodcon_wf_ppopp11_DEPENDENCIES =
am_prodcon_wf_ppopp12_OBJECTS = $(am__objects_1) \
	src/benchmark/std_glue/glue_wf_ppopp12.$(OBJEXT)
prodcon_wf_ppopp12_OBJECTS = $(am_prodcon_wf_ppopp12_OBJECTS)
prodcon_wf_ppopp12_LDADD = $(LDADD)
prodcon_wf_ppopp12_DEPENDENCIES =
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(atomic_value128_unittest_SOURCES) \
	$(atomic_value64_unittest_SOURCES) $(prodcon_bskfifo_SOURCES) \
	$(prodcon_dq_1random_SOURCES) $(prodcon_dq_partrr_SOURCES) \
	$(prodcon_fc_SOURCES) $(prodcon_kstack_SOURCES) \
	$(prodcon_lb_SOURCES) $(prodcon_ms_SOURCES) \
	$(prodcon_rd_SOURCES) $(prodcon_uskfifo_SOURCES) \
	$(prodcon_wf_ppopp11_SOURCES) $(prodcon_wf_ppopp12_SOURCES)
DIST_SOURCES = $(atomic_value128_unittest_SOURCES) \
	$(atomic_value64_unittest_SOURCES) $(prodcon_bskfifo_SOURCES) \
	$(prodcon_dq_1random_SOURCES) $(prodcon_dq_partrr_SOURCES) \
	$(prodcon_fc_SOURCES) $(prodcon_kstack_SOURCES) \
	$(prodcon_lb_SOURCES) $(prodcon_ms_SOURCES) \
	$(prodcon_rd_SOURCES) $(prodcon_uskfifo_SOURCES) \
	$(prodcon_wf_ppopp11_SOURCES) $(prodcon_wf_ppopp12_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CC_OPTIMIZATION = @CC_OPTIMIZATION@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GFLAGS_CFLAGS = @GFLAGS_CFLAGS@
GFLAGS_LIBS = @GFLAGS_LIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
scal_have_pkg_config = @scal_have_pkg_config@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -Wall -mcx16 -m64  -std=c++0x \
        @CC_OPTIMIZATION@ \
        -I./src \
        -ffast-math \
        -fno-builtin-malloc \
        -fno-builtin-calloc \
        -fno-builtin-realloc \
        -fno-builtin-free \
        -fno-omit-frame-pointer \
	@GFLAGS_CFLAGS@

AM_LDFLAGS = -Wl,--as-needed 
LDADD = @GFLAGS_LIBS@
GTEST_DIR = external/googletest

#
# Producer/Consumer benchmark
#
PRODCON_BASE_OBJS = \
        src/benchmark/common.cc \
        src/benchmark/prodcon/prodcon.cc \
        src/util/malloc.cc \
        src/util/random.cc \
        src/util/threadlocals.cc \
        src/util/workloads.cc

prodcon_bskfifo_SOURCES = \
        $(PRODCON_BASE_OBJS) \
        src/benchmark/std_glue/glue_bskfifo.cc

prodcon_fc_SOURCES = \
        $(PRODCON_BASE_OBJS) \
        src/benchmark/std_glue/glue_fc_queue.cc

prodcon_lb_SOURCES = \
        $(PRODCON_BASE_OBJS) \
        src/benchmark/std_glue/glue_lb_queue.cc

prodcon_kstack_SOURCES = \
        $(PRODCON_BASE_OBJS) \
        src/benchmark/std_glue/glue_kstack.cc

prodcon_ms_SOURCES = \
        $(PRODCON_BASE_OBJS) \
        src/benchmark/std_glue/glue_ms_queue.cc

prodcon_dq_1random_SOURCES = \
        $(PRODCON_BASE_OBJS) \
        src/benchmark/std_glue/glue_dq_1random.cc

prodcon_dq_partrr_SOURCES = \
        $(PRODCON_BASE_OBJS) \
        src/benchmark/std_glue/glue_dq_partrr.cc

prodcon_rd_SOURCES = \
        $(PRODCON_BASE_OBJS) \
        src/benchmark/std_glue/glue_rd_queue.cc

prodcon_uskfifo_SOURCES = \
        $(PRODCON_BASE_OBJS) \
        src/benchmark/std_glue/glue_uskfifo.cc

prodcon_wf_ppopp11_SOURCES = \
	$(PRODCON_BASE_OBJS) \
	src/benchmark/std_glue/glue_wf_ppopp11.cc

prodcon_wf_ppopp12_SOURCES = \
	$(PRODCON_BASE_OBJS) \
	src/benchmark/std_glue/glue_wf_ppopp12.cc

GTEST_LIBS = external/libgtest.a external/libgtest_main.a
TEST_CPPFLAGS = -Wall -mcx16 -m64 -std=c++0x
atomic_value128_unittest_CPPFLAGS = \
	$(TEST_CPPFLAGS) \
        -I./src \
        -I$(GTEST_DIR)/include

atomic_value128_unittest_LDADD = \
        @GFLAGS_LIBS@ \
        $(GTEST_LIBS) 

atomic_value128_unittest_SOURCES = \
        src/test/atomic_value128_unittest.cc \
        src/util/malloc.cc

atomic_value64_unittest_CPPFLAGS = \
	$(TEST_CPPFLAGS) \
        -I./src \
        -I$(GTEST_DIR)/include

atomic_value64_unittest_LDADD = \
        @GFLAGS_LIBS@ \
        $(GTEST_LIBS) 

atomic_value64_unittest_SOURCES = \
        src/test/atomic_value64_unittest.cc \
        src/util/malloc.cc

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
src/test/$(am__dirstamp):
	@$(MKDIR_P) src/test
	@: > src/test/$(am__dirstamp)
src/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/test/$(DEPDIR)
	@: > src/test/$(DEPDIR)/$(am__dirstamp)
src/test/atomic_value128_unittest-atomic_value128_unittest.$(OBJEXT):  \
	src/test/$(am__dirstamp) src/test/$(DEPDIR)/$(am__dirstamp)
src/util/$(am__dirstamp):
	@$(MKDIR_P) src/util
	@: > src/util/$(am__dirstamp)
src/util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/util/$(DEPDIR)
	@: > src/util/$(DEPDIR)/$(am__dirstamp)
src/util/atomic_value128_unittest-malloc.$(OBJEXT):  \
	src/util/$(am__dirstamp) src/util/$(DEPDIR)/$(am__dirstamp)
atomic_value128_unittest$(EXEEXT): $(atomic_value128_unittest_OBJECTS) $(atomic_value128_unittest_DEPENDENCIES) $(EXTRA_atomic_value128_unittest_DEPENDENCIES) 
	@rm -f atomic_value128_unittest$(EXEEXT)
	$(CXXLINK) $(atomic_value128_unittest_OBJECTS) $(atomic_value128_unittest_LDADD) $(LIBS)
src/test/atomic_value64_unittest-atomic_value64_unittest.$(OBJEXT):  \
	src/test/$(am__dirstamp) src/test/$(DEPDIR)/$(am__dirstamp)
src/util/atomic_value64_unittest-malloc.$(OBJEXT):  \
	src/util/$(am__dirstamp) src/util/$(DEPDIR)/$(am__dirstamp)
atomic_value64_unittest$(EXEEXT): $(atomic_value64_unittest_OBJECTS) $(atomic_value64_unittest_DEPENDENCIES) $(EXTRA_atomic_value64_unittest_DEPENDENCIES) 
	@rm -f atomic_value64_unittest$(EXEEXT)
	$(CXXLINK) $(atomic_value64_unittest_OBJECTS) $(atomic_value64_unittest_LDADD) $(LIBS)
src/benchmark/$(am__dirstamp):
	@$(MKDIR_P) src/benchmark
	@: > src/benchmark/$(am__dirstamp)
src/benchmark/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/benchmark/$(DEPDIR)
	@: > src/benchmark/$(DEPDIR)/$(am__dirstamp)
src/benchmark/common.$(OBJEXT): src/benchmark/$(am__dirstamp) \
	src/benchmark/$(DEPDIR)/$(am__dirstamp)
src/benchmark/prodcon/$(am__dirstamp):
	@$(MKDIR_P) src/benchmark/prodcon
	@: > src/benchmark/prodcon/$(am__dirstamp)
src/benchmark/prodcon/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/benchmark/prodcon/$(DEPDIR)
	@: > src/benchmark/prodcon/$(DEPDIR)/$(am__dirstamp)
src/benchmark/prodcon/prodcon.$(OBJEXT):  \
	src/benchmark/prodcon/$(am__dirstamp) \
	src/benchmark/prodcon/$(DEPDIR)/$(am__dirstamp)
src/util/malloc.$(OBJEXT): src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/random.$(OBJEXT): src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/threadlocals.$(OBJEXT): src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/workloads.$(OBJEXT): src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/benchmark/std_glue/$(am__dirstamp):
	@$(MKDIR_P) src/benchmark/std_glue
	@: > src/benchmark/std_glue/$(am__dirstamp)
src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/benchmark/std_glue/$(DEPDIR)
	@: > src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp)
src/benchmark/std_glue/glue_bskfifo.$(OBJEXT):  \
	src/benchmark/std_glue/$(am__dirstamp) \
	src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp)
prodcon-bskfifo$(EXEEXT): $(prodcon_bskfifo_OBJECTS) $(prodcon_bskfifo_DEPENDENCIES) $(EXTRA_prodcon_bskfifo_DEPENDENCIES) 
	@rm -f prodcon-bskfifo$(EXEEXT)
	$(CXXLINK) $(prodcon_bskfifo_OBJECTS) $(prodcon_bskfifo_LDADD) $(LIBS)
src/benchmark/std_glue/glue_dq_1random.$(OBJEXT):  \
	src/benchmark/std_glue/$(am__dirstamp) \
	src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp)
prodcon-dq-1random$(EXEEXT): $(prodcon_dq_1random_OBJECTS) $(prodcon_dq_1random_DEPENDENCIES) $(EXTRA_prodcon_dq_1random_DEPENDENCIES) 
	@rm -f prodcon-dq-1random$(EXEEXT)
	$(CXXLINK) $(prodcon_dq_1random_OBJECTS) $(prodcon_dq_1random_LDADD) $(LIBS)
src/benchmark/std_glue/glue_dq_partrr.$(OBJEXT):  \
	src/benchmark/std_glue/$(am__dirstamp) \
	src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp)
prodcon-dq-partrr$(EXEEXT): $(prodcon_dq_partrr_OBJECTS) $(prodcon_dq_partrr_DEPENDENCIES) $(EXTRA_prodcon_dq_partrr_DEPENDENCIES) 
	@rm -f prodcon-dq-partrr$(EXEEXT)
	$(CXXLINK) $(prodcon_dq_partrr_OBJECTS) $(prodcon_dq_partrr_LDADD) $(LIBS)
src/benchmark/std_glue/glue_fc_queue.$(OBJEXT):  \
	src/benchmark/std_glue/$(am__dirstamp) \
	src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp)
prodcon-fc$(EXEEXT): $(prodcon_fc_OBJECTS) $(prodcon_fc_DEPENDENCIES) $(EXTRA_prodcon_fc_DEPENDENCIES) 
	@rm -f prodcon-fc$(EXEEXT)
	$(CXXLINK) $(prodcon_fc_OBJECTS) $(prodcon_fc_LDADD) $(LIBS)
src/benchmark/std_glue/glue_kstack.$(OBJEXT):  \
	src/benchmark/std_glue/$(am__dirstamp) \
	src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp)
prodcon-kstack$(EXEEXT): $(prodcon_kstack_OBJECTS) $(prodcon_kstack_DEPENDENCIES) $(EXTRA_prodcon_kstack_DEPENDENCIES) 
	@rm -f prodcon-kstack$(EXEEXT)
	$(CXXLINK) $(prodcon_kstack_OBJECTS) $(prodcon_kstack_LDADD) $(LIBS)
src/benchmark/std_glue/glue_lb_queue.$(OBJEXT):  \
	src/benchmark/std_glue/$(am__dirstamp) \
	src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp)
prodcon-lb$(EXEEXT): $(prodcon_lb_OBJECTS) $(prodcon_lb_DEPENDENCIES) $(EXTRA_prodcon_lb_DEPENDENCIES) 
	@rm -f prodcon-lb$(EXEEXT)
	$(CXXLINK) $(prodcon_lb_OBJECTS) $(prodcon_lb_LDADD) $(LIBS)
src/benchmark/std_glue/glue_ms_queue.$(OBJEXT):  \
	src/benchmark/std_glue/$(am__dirstamp) \
	src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp)
prodcon-ms$(EXEEXT): $(prodcon_ms_OBJECTS) $(prodcon_ms_DEPENDENCIES) $(EXTRA_prodcon_ms_DEPENDENCIES) 
	@rm -f prodcon-ms$(EXEEXT)
	$(CXXLINK) $(prodcon_ms_OBJECTS) $(prodcon_ms_LDADD) $(LIBS)
src/benchmark/std_glue/glue_rd_queue.$(OBJEXT):  \
	src/benchmark/std_glue/$(am__dirstamp) \
	src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp)
prodcon-rd$(EXEEXT): $(prodcon_rd_OBJECTS) $(prodcon_rd_DEPENDENCIES) $(EXTRA_prodcon_rd_DEPENDENCIES) 
	@rm -f prodcon-rd$(EXEEXT)
	$(CXXLINK) $(prodcon_rd_OBJECTS) $(prodcon_rd_LDADD) $(LIBS)
src/benchmark/std_glue/glue_uskfifo.$(OBJEXT):  \
	src/benchmark/std_glue/$(am__dirstamp) \
	src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp)
prodcon-uskfifo$(EXEEXT): $(prodcon_uskfifo_OBJECTS) $(prodcon_uskfifo_DEPENDENCIES) $(EXTRA_prodcon_uskfifo_DEPENDENCIES) 
	@rm -f prodcon-uskfifo$(EXEEXT)
	$(CXXLINK) $(prodcon_uskfifo_OBJECTS) $(prodcon_uskfifo_LDADD) $(LIBS)
src/benchmark/std_glue/glue_wf_ppopp11.$(OBJEXT):  \
	src/benchmark/std_glue/$(am__dirstamp) \
	src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp)
prodcon-wf-ppopp11$(EXEEXT): $(prodcon_wf_ppopp11_OBJECTS) $(prodcon_wf_ppopp11_DEPENDENCIES) $(EXTRA_prodcon_wf_ppopp11_DEPENDENCIES) 
	@rm -f prodcon-wf-ppopp11$(EXEEXT)
	$(CXXLINK) $(prodcon_wf_ppopp11_OBJECTS) $(prodcon_wf_ppopp11_LDADD) $(LIBS)
src/benchmark/std_glue/glue_wf_ppopp12.$(OBJEXT):  \
	src/benchmark/std_glue/$(am__dirstamp) \
	src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp)
prodcon-wf-ppopp12$(EXEEXT): $(prodcon_wf_ppopp12_OBJECTS) $(prodcon_wf_ppopp12_DEPENDENCIES) $(EXTRA_prodcon_wf_ppopp12_DEPENDENCIES) 
	@rm -f prodcon-wf-ppopp12$(EXEEXT)
	$(CXXLINK) $(prodcon_wf_ppopp12_OBJECTS) $(prodcon_wf_ppopp12_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/benchmark/common.$(OBJEXT)
	-rm -f src/benchmark/prodcon/prodcon.$(OBJEXT)
	-rm -f src/benchmark/std_glue/glue_bskfifo.$(OBJEXT)
	-rm -f src/benchmark/std_glue/glue_dq_1random.$(OBJEXT)
	-rm -f src/benchmark/std_glue/glue_dq_partrr.$(OBJEXT)
	-rm -f src/benchmark/std_glue/glue_fc_queue.$(OBJEXT)
	-rm -f src/benchmark/std_glue/glue_kstack.$(OBJEXT)
	-rm -f src/benchmark/std_glue/glue_lb_queue.$(OBJEXT)
	-rm -f src/benchmark/std_glue/glue_ms_queue.$(OBJEXT)
	-rm -f src/benchmark/std_glue/glue_rd_queue.$(OBJEXT)
	-rm -f src/benchmark/std_glue/glue_uskfifo.$(OBJEXT)
	-rm -f src/benchmark/std_glue/glue_wf_ppopp11.$(OBJEXT)
	-rm -f src/benchmark/std_glue/glue_wf_ppopp12.$(OBJEXT)
	-rm -f src/test/atomic_value128_unittest-atomic_value128_unittest.$(OBJEXT)
	-rm -f src/test/atomic_value64_unittest-atomic_value64_unittest.$(OBJEXT)
	-rm -f src/util/atomic_value128_unittest-malloc.$(OBJEXT)
	-rm -f src/util/atomic_value64_unittest-malloc.$(OBJEXT)
	-rm -f src/util/malloc.$(OBJEXT)
	-rm -f src/util/random.$(OBJEXT)
	-rm -f src/util/threadlocals.$(OBJEXT)
	-rm -f src/util/workloads.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@src/benchmark/$(DEPDIR)/common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/benchmark/prodcon/$(DEPDIR)/prodcon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/benchmark/std_glue/$(DEPDIR)/glue_bskfifo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/benchmark/std_glue/$(DEPDIR)/glue_dq_1random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/benchmark/std_glue/$(DEPDIR)/glue_dq_partrr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/benchmark/std_glue/$(DEPDIR)/glue_fc_queue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/benchmark/std_glue/$(DEPDIR)/glue_kstack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/benchmark/std_glue/$(DEPDIR)/glue_lb_queue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/benchmark/std_glue/$(DEPDIR)/glue_ms_queue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/benchmark/std_glue/$(DEPDIR)/glue_rd_queue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/benchmark/std_glue/$(DEPDIR)/glue_uskfifo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/benchmark/std_glue/$(DEPDIR)/glue_wf_ppopp11.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/benchmark/std_glue/$(DEPDIR)/glue_wf_ppopp12.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/test/$(DEPDIR)/atomic_value128_unittest-atomic_value128_unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/test/$(DEPDIR)/atomic_value64_unittest-atomic_value64_unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/util/$(DEPDIR)/atomic_value128_unittest-malloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/util/$(DEPDIR)/atomic_value64_unittest-malloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/util/$(DEPDIR)/malloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/util/$(DEPDIR)/random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/util/$(DEPDIR)/threadlocals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/util/$(DEPDIR)/workloads.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

src/test/atomic_value128_unittest-atomic_value128_unittest.o: src/test/atomic_value128_unittest.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value128_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/test/atomic_value128_unittest-atomic_value128_unittest.o -MD -MP -MF src/test/$(DEPDIR)/atomic_value128_unittest-atomic_value128_unittest.Tpo -c -o src/test/atomic_value128_unittest-atomic_value128_unittest.o `test -f 'src/test/atomic_value128_unittest.cc' || echo '$(srcdir)/'`src/test/atomic_value128_unittest.cc
@am__fastdepCXX_TRUE@	$(am__mv) src/test/$(DEPDIR)/atomic_value128_unittest-atomic_value128_unittest.Tpo src/test/$(DEPDIR)/atomic_value128_unittest-atomic_value128_unittest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/test/atomic_value128_unittest.cc' object='src/test/atomic_value128_unittest-atomic_value128_unittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value128_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/test/atomic_value128_unittest-atomic_value128_unittest.o `test -f 'src/test/atomic_value128_unittest.cc' || echo '$(srcdir)/'`src/test/atomic_value128_unittest.cc

src/test/atomic_value128_unittest-atomic_value128_unittest.obj: src/test/atomic_value128_unittest.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value128_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/test/atomic_value128_unittest-atomic_value128_unittest.obj -MD -MP -MF src/test/$(DEPDIR)/atomic_value128_unittest-atomic_value128_unittest.Tpo -c -o src/test/atomic_value128_unittest-atomic_value128_unittest.obj `if test -f 'src/test/atomic_value128_unittest.cc'; then $(CYGPATH_W) 'src/test/atomic_value128_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/test/atomic_value128_unittest.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) src/test/$(DEPDIR)/atomic_value128_unittest-atomic_value128_unittest.Tpo src/test/$(DEPDIR)/atomic_value128_unittest-atomic_value128_unittest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/test/atomic_value128_unittest.cc' object='src/test/atomic_value128_unittest-atomic_value128_unittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value128_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/test/atomic_value128_unittest-atomic_value128_unittest.obj `if test -f 'src/test/atomic_value128_unittest.cc'; then $(CYGPATH_W) 'src/test/atomic_value128_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/test/atomic_value128_unittest.cc'; fi`

src/util/atomic_value128_unittest-malloc.o: src/util/malloc.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value128_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/util/atomic_value128_unittest-malloc.o -MD -MP -MF src/util/$(DEPDIR)/atomic_value128_unittest-malloc.Tpo -c -o src/util/atomic_value128_unittest-malloc.o `test -f 'src/util/malloc.cc' || echo '$(srcdir)/'`src/util/malloc.cc
@am__fastdepCXX_TRUE@	$(am__mv) src/util/$(DEPDIR)/atomic_value128_unittest-malloc.Tpo src/util/$(DEPDIR)/atomic_value128_unittest-malloc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/util/malloc.cc' object='src/util/atomic_value128_unittest-malloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value128_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/util/atomic_value128_unittest-malloc.o `test -f 'src/util/malloc.cc' || echo '$(srcdir)/'`src/util/malloc.cc

src/util/atomic_value128_unittest-malloc.obj: src/util/malloc.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value128_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/util/atomic_value128_unittest-malloc.obj -MD -MP -MF src/util/$(DEPDIR)/atomic_value128_unittest-malloc.Tpo -c -o src/util/atomic_value128_unittest-malloc.obj `if test -f 'src/util/malloc.cc'; then $(CYGPATH_W) 'src/util/malloc.cc'; else $(CYGPATH_W) '$(srcdir)/src/util/malloc.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) src/util/$(DEPDIR)/atomic_value128_unittest-malloc.Tpo src/util/$(DEPDIR)/atomic_value128_unittest-malloc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/util/malloc.cc' object='src/util/atomic_value128_unittest-malloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value128_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/util/atomic_value128_unittest-malloc.obj `if test -f 'src/util/malloc.cc'; then $(CYGPATH_W) 'src/util/malloc.cc'; else $(CYGPATH_W) '$(srcdir)/src/util/malloc.cc'; fi`

src/test/atomic_value64_unittest-atomic_value64_unittest.o: src/test/atomic_value64_unittest.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value64_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/test/atomic_value64_unittest-atomic_value64_unittest.o -MD -MP -MF src/test/$(DEPDIR)/atomic_value64_unittest-atomic_value64_unittest.Tpo -c -o src/test/atomic_value64_unittest-atomic_value64_unittest.o `test -f 'src/test/atomic_value64_unittest.cc' || echo '$(srcdir)/'`src/test/atomic_value64_unittest.cc
@am__fastdepCXX_TRUE@	$(am__mv) src/test/$(DEPDIR)/atomic_value64_unittest-atomic_value64_unittest.Tpo src/test/$(DEPDIR)/atomic_value64_unittest-atomic_value64_unittest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/test/atomic_value64_unittest.cc' object='src/test/atomic_value64_unittest-atomic_value64_unittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value64_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/test/atomic_value64_unittest-atomic_value64_unittest.o `test -f 'src/test/atomic_value64_unittest.cc' || echo '$(srcdir)/'`src/test/atomic_value64_unittest.cc

src/test/atomic_value64_unittest-atomic_value64_unittest.obj: src/test/atomic_value64_unittest.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value64_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/test/atomic_value64_unittest-atomic_value64_unittest.obj -MD -MP -MF src/test/$(DEPDIR)/atomic_value64_unittest-atomic_value64_unittest.Tpo -c -o src/test/atomic_value64_unittest-atomic_value64_unittest.obj `if test -f 'src/test/atomic_value64_unittest.cc'; then $(CYGPATH_W) 'src/test/atomic_value64_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/test/atomic_value64_unittest.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) src/test/$(DEPDIR)/atomic_value64_unittest-atomic_value64_unittest.Tpo src/test/$(DEPDIR)/atomic_value64_unittest-atomic_value64_unittest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/test/atomic_value64_unittest.cc' object='src/test/atomic_value64_unittest-atomic_value64_unittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value64_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/test/atomic_value64_unittest-atomic_value64_unittest.obj `if test -f 'src/test/atomic_value64_unittest.cc'; then $(CYGPATH_W) 'src/test/atomic_value64_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/test/atomic_value64_unittest.cc'; fi`

src/util/atomic_value64_unittest-malloc.o: src/util/malloc.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value64_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/util/atomic_value64_unittest-malloc.o -MD -MP -MF src/util/$(DEPDIR)/atomic_value64_unittest-malloc.Tpo -c -o src/util/atomic_value64_unittest-malloc.o `test -f 'src/util/malloc.cc' || echo '$(srcdir)/'`src/util/malloc.cc
@am__fastdepCXX_TRUE@	$(am__mv) src/util/$(DEPDIR)/atomic_value64_unittest-malloc.Tpo src/util/$(DEPDIR)/atomic_value64_unittest-malloc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/util/malloc.cc' object='src/util/atomic_value64_unittest-malloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value64_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/util/atomic_value64_unittest-malloc.o `test -f 'src/util/malloc.cc' || echo '$(srcdir)/'`src/util/malloc.cc

src/util/atomic_value64_unittest-malloc.obj: src/util/malloc.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value64_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/util/atomic_value64_unittest-malloc.obj -MD -MP -MF src/util/$(DEPDIR)/atomic_value64_unittest-malloc.Tpo -c -o src/util/atomic_value64_unittest-malloc.obj `if test -f 'src/util/malloc.cc'; then $(CYGPATH_W) 'src/util/malloc.cc'; else $(CYGPATH_W) '$(srcdir)/src/util/malloc.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) src/util/$(DEPDIR)/atomic_value64_unittest-malloc.Tpo src/util/$(DEPDIR)/atomic_value64_unittest-malloc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/util/malloc.cc' object='src/util/atomic_value64_unittest-malloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atomic_value64_unittest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/util/atomic_value64_unittest-malloc.obj `if test -f 'src/util/malloc.cc'; then $(CYGPATH_W) 'src/util/malloc.cc'; else $(CYGPATH_W) '$(srcdir)/src/util/malloc.cc'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/benchmark/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/benchmark/$(am__dirstamp)
	-rm -f src/benchmark/prodcon/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/benchmark/prodcon/$(am__dirstamp)
	-rm -f src/benchmark/std_glue/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/benchmark/std_glue/$(am__dirstamp)
	-rm -f src/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/test/$(am__dirstamp)
	-rm -f src/util/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/util/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf src/benchmark/$(DEPDIR) src/benchmark/prodcon/$(DEPDIR) src/benchmark/std_glue/$(DEPDIR) src/test/$(DEPDIR) src/util/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf src/benchmark/$(DEPDIR) src/benchmark/prodcon/$(DEPDIR) src/benchmark/std_glue/$(DEPDIR) src/test/$(DEPDIR) src/util/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-TESTS check-am \
	clean clean-binPROGRAMS clean-generic clean-local \
	clean-noinstPROGRAMS ctags dist dist-all dist-bzip2 dist-gzip \
	dist-lzip dist-lzma dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


#
# Tests -- currenctly only the atomic containers
#

external/libgtest_main.a:
	$(CXX) -I$(GTEST_DIR)/include -I$(GTEST_DIR) -c $(GTEST_DIR)/src/gtest_main.cc -o external/gtest_main.o
	$(AR) -rv external/libgtest_main.a external/gtest_main.o

external/libgtest.a:
	$(CXX) -I$(GTEST_DIR)/include -I$(GTEST_DIR) -c $(GTEST_DIR)/src/gtest-all.cc -o external/gtest-all.o
	$(AR) -rv external/libgtest.a external/gtest-all.o

gtest-clean:
	rm -f external/gtest-all.o external/gtest_main.o
	rm -f external/libgtest.a external/libgtest_main.a

#
# Extend the standard Makefile rules
#

clean-local: gtest-clean

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
